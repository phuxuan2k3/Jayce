{
	"info": {
		"version": "1.0.0",
		"title": "My API",
		"description": "This is the API"
	},
	"servers": [
		{
			"url": "http://localhost:8080/api",
			"description": "Localhost"
		}
	],
	"openapi": "3.1.0",
	"security": [
		{
			"userId": []
		},
		{
			"roleId": []
		},
		{
			"Authorization": []
		}
	],
	"components": {
		"securitySchemes": {
			"userId": {
				"type": "apiKey",
				"name": "x-user-id",
				"in": "header",
				"description": "User ID for authentication"
			},
			"roleId": {
				"type": "apiKey",
				"name": "x-role-id",
				"in": "header",
				"description": "Role ID for authentication"
			},
			"Authorization": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header",
				"description": "Bearer token for authentication"
			}
		},
		"schemas": {
			"AnswerForQuestionTypeSchema": {
				"oneOf": [
					{
						"type": "object",
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"MCQ"
								]
							},
							"chosenOption": {
								"type": "number"
							}
						},
						"required": [
							"type",
							"chosenOption"
						]
					},
					{
						"type": "object",
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"LONG_ANSWER"
								]
							},
							"answer": {
								"type": "string"
							}
						},
						"required": [
							"type",
							"answer"
						]
					}
				]
			},
			"ExamDetailCommonSchema": {
				"type": "object",
				"properties": {
					"mode": {
						"type": "string",
						"enum": [
							"EXAM"
						]
					},
					"roomId": {
						"type": "string"
					},
					"hasPassword": {
						"type": "boolean"
					},
					"password": {
						"type": [
							"string",
							"null"
						]
					},
					"numberOfAttemptsAllowed": {
						"type": "integer",
						"minimum": 0,
						"default": 1
					},
					"numberOfParticipants": {
						"type": "integer",
						"minimum": 0,
						"default": 0
					},
					"isAnswerVisible": {
						"type": "boolean"
					},
					"isAllowedToSeeOtherResults": {
						"type": "boolean"
					},
					"openDate": {
						"type": [
							"string",
							"null"
						]
					},
					"closeDate": {
						"type": [
							"string",
							"null"
						]
					},
					"participants": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"isPublic": {
						"type": "boolean",
						"default": false
					}
				},
				"required": [
					"mode",
					"roomId",
					"hasPassword",
					"isAnswerVisible",
					"isAllowedToSeeOtherResults",
					"openDate",
					"closeDate",
					"participants"
				]
			},
			"PracticeDetailCommonSchema": {
				"type": "object",
				"properties": {
					"mode": {
						"type": "string",
						"enum": [
							"PRACTICE"
						]
					},
					"difficulty": {
						"type": "string"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"numberOfQuestions": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"numberOfOptions": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"outlines": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"mode",
					"difficulty",
					"tags",
					"numberOfQuestions",
					"numberOfOptions",
					"outlines"
				]
			},
			"TestDetailCommonSchema": {
				"oneOf": [
					{
						"$ref": "#/components/schemas/ExamDetailCommonSchema"
					},
					{
						"$ref": "#/components/schemas/PracticeDetailCommonSchema"
					}
				],
				"discriminator": {
					"propertyName": "mode",
					"mapping": {
						"EXAM": "#/components/schemas/ExamDetailCommonSchema",
						"PRACTICE": "#/components/schemas/PracticeDetailCommonSchema"
					}
				}
			},
			"TestCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"authorId": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"minutesToAnswer": {
						"type": "number",
						"minimum": 1,
						"maximum": 10000
					},
					"language": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"mode": {
						"type": "string",
						"enum": [
							"EXAM",
							"PRACTICE"
						]
					}
				},
				"required": [
					"id",
					"authorId",
					"title",
					"description",
					"minutesToAnswer",
					"language",
					"createdAt",
					"updatedAt",
					"mode"
				]
			},
			"TestFullSchema": {
				"allOf": [
					{
						"$ref": "#/components/schemas/TestCoreSchema"
					},
					{
						"type": "object",
						"properties": {
							"_aggregate": {
								"type": "object",
								"properties": {
									"numberOfQuestions": {
										"type": "integer",
										"minimum": 0
									},
									"totalPoints": {
										"type": "number",
										"minimum": 0
									},
									"totalCandidates": {
										"type": "integer",
										"minimum": 0
									},
									"totalAttempts": {
										"type": "integer",
										"minimum": 0
									},
									"averageScore": {
										"type": "number",
										"minimum": 0
									},
									"highestScore": {
										"type": "number",
										"minimum": 0
									},
									"lowestScore": {
										"type": "number",
										"minimum": 0
									},
									"averageTime": {
										"type": "number",
										"minimum": 0
									}
								},
								"required": [
									"numberOfQuestions",
									"totalPoints",
									"totalCandidates",
									"totalAttempts",
									"averageScore",
									"highestScore",
									"lowestScore",
									"averageTime"
								]
							},
							"_detail": {
								"$ref": "#/components/schemas/TestDetailCommonSchema"
							}
						},
						"required": [
							"_aggregate",
							"_detail"
						]
					}
				]
			},
			"AttemptCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"order": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"testId": {
						"type": "string"
					},
					"candidateId": {
						"type": "string"
					},
					"hasEnded": {
						"type": "boolean"
					},
					"status": {
						"type": "string",
						"enum": [
							"IN_PROGRESS",
							"COMPLETED",
							"GRADED"
						]
					},
					"secondsSpent": {
						"type": "integer",
						"minimum": 0
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"_aggregate": {
						"type": "object",
						"properties": {
							"points": {
								"type": "number",
								"minimum": 0
							},
							"answered": {
								"type": "integer",
								"minimum": 0
							},
							"answeredCorrect": {
								"type": "integer",
								"minimum": 0
							}
						},
						"required": [
							"points",
							"answered",
							"answeredCorrect"
						]
					},
					"_include": {
						"type": "object",
						"properties": {
							"test": {
								"$ref": "#/components/schemas/TestCoreSchema"
							}
						},
						"required": [
							"test"
						]
					}
				},
				"required": [
					"id",
					"order",
					"testId",
					"candidateId",
					"hasEnded",
					"status",
					"secondsSpent",
					"createdAt",
					"updatedAt",
					"_aggregate",
					"_include"
				]
			},
			"AnswerCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"attemptId": {
						"type": "string"
					},
					"questionId": {
						"type": "number"
					},
					"pointReceived": {
						"type": [
							"number",
							"null"
						]
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"child": {
						"$ref": "#/components/schemas/AnswerForQuestionTypeSchema"
					}
				},
				"required": [
					"id",
					"attemptId",
					"questionId",
					"createdAt",
					"updatedAt",
					"child"
				]
			},
			"FeedbackCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"testId": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"minimum": 1,
						"maximum": 10
					},
					"problems": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"inaccurate",
								"un-related",
								"poor content",
								"incomplete",
								"repeated",
								"error",
								"other",
								""
							]
						},
						"default": []
					},
					"comment": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"testId",
					"rating",
					"createdAt",
					"updatedAt"
				]
			},
			"TemplateCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"language": {
						"type": "string"
					},
					"minutesToAnswer": {
						"type": "number",
						"minimum": 1,
						"maximum": 10000
					},
					"difficulty": {
						"type": "string"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"numberOfQuestions": {
						"type": "number"
					},
					"numberOfOptions": {
						"type": "number"
					},
					"outlines": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"userId",
					"name",
					"title",
					"description",
					"language",
					"minutesToAnswer",
					"difficulty",
					"tags",
					"numberOfQuestions",
					"numberOfOptions",
					"outlines",
					"createdAt",
					"updatedAt"
				]
			},
			"CandidateCoreSchema": {
				"type": "object",
				"properties": {
					"candidateId": {
						"type": "string"
					},
					"_aggregate": {
						"type": "object",
						"properties": {
							"rank": {
								"type": "integer",
								"minimum": 0
							},
							"totalAttempts": {
								"type": "integer",
								"minimum": 0
							},
							"averageScore": {
								"type": "integer",
								"minimum": 0
							},
							"highestScore": {
								"type": "integer",
								"minimum": 0
							},
							"lowestScore": {
								"type": "integer",
								"minimum": 0
							},
							"averageTime": {
								"type": "integer",
								"minimum": 0
							}
						},
						"required": [
							"rank",
							"totalAttempts",
							"averageScore",
							"highestScore",
							"lowestScore",
							"averageTime"
						]
					}
				},
				"required": [
					"candidateId",
					"_aggregate"
				]
			},
			"MCQDetailCommonSchema": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"MCQ"
						]
					},
					"options": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"minItems": 2,
						"maxItems": 10
					},
					"correctOption": {
						"type": [
							"integer",
							"null"
						],
						"minimum": 0
					}
				},
				"required": [
					"type",
					"options",
					"correctOption"
				]
			},
			"LongAnswerDetailCommonSchema": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"LONG_ANSWER"
						]
					},
					"imageLinks": {
						"type": [
							"array",
							"null"
						],
						"items": {
							"type": "string"
						}
					},
					"extraText": {
						"type": [
							"string",
							"null"
						]
					},
					"correctAnswer": {
						"type": [
							"string",
							"null"
						]
					}
				},
				"required": [
					"type",
					"correctAnswer"
				]
			},
			"QuestionDetailCommonSchema": {
				"oneOf": [
					{
						"$ref": "#/components/schemas/MCQDetailCommonSchema"
					},
					{
						"$ref": "#/components/schemas/LongAnswerDetailCommonSchema"
					}
				],
				"discriminator": {
					"propertyName": "type",
					"mapping": {
						"MCQ": "#/components/schemas/MCQDetailCommonSchema",
						"LONG_ANSWER": "#/components/schemas/LongAnswerDetailCommonSchema"
					}
				}
			},
			"QuestionCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"testId": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"points": {
						"type": "integer",
						"minimum": 0
					},
					"type": {
						"type": "string",
						"enum": [
							"MCQ",
							"LONG_ANSWER"
						]
					},
					"detail": {
						"$ref": "#/components/schemas/QuestionDetailCommonSchema"
					},
					"_aggregate_test": {
						"type": "object",
						"properties": {
							"numberOfAnswers": {
								"type": "integer",
								"minimum": 0
							},
							"numberOfCorrectAnswers": {
								"type": "integer",
								"minimum": 0
							},
							"averageScore": {
								"type": "number",
								"minimum": 0
							}
						},
						"required": [
							"numberOfAnswers",
							"numberOfCorrectAnswers",
							"averageScore"
						]
					}
				},
				"required": [
					"id",
					"testId",
					"text",
					"points",
					"type",
					"detail",
					"_aggregate_test"
				]
			}
		},
		"parameters": {}
	},
	"paths": {
		"/candidates/{candidateId}/attempts": {
			"get": {
				"tags": [
					"Candidates"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "candidateId",
						"in": "path"
					},
					{
						"schema": {
							"type": "number",
							"minimum": 1,
							"default": 1
						},
						"required": false,
						"name": "page",
						"in": "query"
					},
					{
						"schema": {
							"type": [
								"number",
								"null"
							],
							"default": 100
						},
						"required": false,
						"name": "perPage",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "testId",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/AttemptCoreSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			}
		},
		"/feedbacks": {
			"get": {
				"tags": [
					"Feedbacks"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByCreatedAt",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByRating",
						"in": "query"
					},
					{
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"required": false,
						"name": "filterByProblems",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/FeedbackCoreSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Feedbacks"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"testId": {
										"type": "string"
									},
									"rating": {
										"type": "number",
										"minimum": 1,
										"maximum": 10
									},
									"problems": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"inaccurate",
												"un-related",
												"poor content",
												"incomplete",
												"repeated",
												"error",
												"other",
												""
											]
										},
										"default": []
									},
									"comment": {
										"type": "string"
									}
								},
								"required": [
									"testId",
									"rating"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/feedbacks/{feedbackId}": {
			"get": {
				"tags": [
					"Feedbacks"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "feedbackId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FeedbackCoreSchema"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Feedbacks"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "feedbackId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"testId": {
										"type": "string"
									},
									"rating": {
										"type": "number",
										"minimum": 1,
										"maximum": 10
									},
									"problems": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"inaccurate",
												"un-related",
												"poor content",
												"incomplete",
												"repeated",
												"error",
												"other",
												""
											]
										},
										"default": []
									},
									"comment": {
										"type": "string"
									}
								},
								"required": [
									"testId",
									"rating"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"tags": [
					"Feedbacks"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "feedbackId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/templates": {
			"get": {
				"tags": [
					"Templates"
				],
				"parameters": [
					{
						"schema": {
							"type": "number",
							"minimum": 1,
							"default": 1
						},
						"required": false,
						"name": "page",
						"in": "query"
					},
					{
						"schema": {
							"type": [
								"number",
								"null"
							],
							"default": 100
						},
						"required": false,
						"name": "perPage",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "search",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByCreatedAt",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByName",
						"in": "query"
					},
					{
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"required": false,
						"name": "filterTags",
						"in": "query"
					},
					{
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"required": false,
						"name": "filterDifficulty",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/TemplateCoreSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Templates"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"language": {
										"type": "string"
									},
									"minutesToAnswer": {
										"type": "number",
										"minimum": 1,
										"maximum": 10000
									},
									"difficulty": {
										"type": "string"
									},
									"tags": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"numberOfQuestions": {
										"type": "number"
									},
									"numberOfOptions": {
										"type": "number"
									},
									"outlines": {
										"type": "array",
										"items": {
											"type": "string"
										}
									}
								},
								"required": [
									"name",
									"title",
									"description",
									"language",
									"minutesToAnswer",
									"difficulty",
									"tags",
									"numberOfQuestions",
									"numberOfOptions",
									"outlines"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"templateId": {
											"type": "string"
										}
									},
									"required": [
										"templateId"
									]
								}
							}
						}
					}
				}
			}
		},
		"/templates/{templateId}": {
			"get": {
				"tags": [
					"Templates"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "templateId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TemplateCoreSchema"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Templates"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "templateId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"language": {
										"type": "string"
									},
									"minutesToAnswer": {
										"type": "number",
										"minimum": 1,
										"maximum": 10000
									},
									"difficulty": {
										"type": "string"
									},
									"tags": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"numberOfQuestions": {
										"type": "number"
									},
									"numberOfOptions": {
										"type": "number"
									},
									"outlines": {
										"type": "array",
										"items": {
											"type": "string"
										}
									}
								},
								"required": [
									"name",
									"title",
									"description",
									"language",
									"minutesToAnswer",
									"difficulty",
									"tags",
									"numberOfQuestions",
									"numberOfOptions",
									"outlines"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"tags": [
					"Templates"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "templateId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/tests": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "number",
							"minimum": 1,
							"default": 1
						},
						"required": false,
						"name": "page",
						"in": "query"
					},
					{
						"schema": {
							"type": [
								"number",
								"null"
							],
							"default": 100
						},
						"required": false,
						"name": "perPage",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"EXAM",
								"PRACTICE"
							]
						},
						"required": false,
						"name": "mode",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "authorId",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "candidateId",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "searchTitle",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortCreatedAt",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortTitle",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"manage",
								"view"
							],
							"default": "manage"
						},
						"required": false,
						"name": "actions",
						"in": "query"
					},
					{
						"schema": {
							"anyOf": [
								{
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"UPCOMING",
											"OPEN",
											"CLOSED"
										]
									}
								},
								{
									"type": "string"
								}
							],
							"default": []
						},
						"required": false,
						"name": "filterStatuses",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/TestFullSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Tests"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"minutesToAnswer": {
										"type": "number",
										"minimum": 1,
										"maximum": 10000
									},
									"language": {
										"type": "string"
									},
									"mode": {
										"type": "string",
										"enum": [
											"EXAM",
											"PRACTICE"
										]
									},
									"detail": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"mode": {
														"type": "string",
														"enum": [
															"EXAM"
														]
													},
													"roomId": {
														"type": "string"
													},
													"password": {
														"type": [
															"string",
															"null"
														]
													},
													"numberOfAttemptsAllowed": {
														"type": "integer",
														"minimum": 0,
														"default": 1
													},
													"numberOfParticipants": {
														"type": "integer",
														"minimum": 0,
														"default": 0
													},
													"isAnswerVisible": {
														"type": "boolean"
													},
													"isAllowedToSeeOtherResults": {
														"type": "boolean"
													},
													"openDate": {
														"type": [
															"string",
															"null"
														]
													},
													"closeDate": {
														"type": [
															"string",
															"null"
														]
													},
													"isPublic": {
														"type": "boolean",
														"default": false
													}
												},
												"required": [
													"mode",
													"roomId",
													"isAnswerVisible",
													"isAllowedToSeeOtherResults",
													"openDate",
													"closeDate"
												]
											},
											{
												"$ref": "#/components/schemas/PracticeDetailCommonSchema"
											}
										]
									},
									"questions": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"text": {
													"type": "string"
												},
												"points": {
													"type": "integer",
													"minimum": 0
												},
												"type": {
													"type": "string",
													"enum": [
														"MCQ",
														"LONG_ANSWER"
													]
												},
												"detail": {
													"oneOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/MCQDetailCommonSchema"
																},
																{
																	"type": "object",
																	"properties": {
																		"correctOption": {
																			"type": "integer",
																			"minimum": 0
																		}
																	}
																}
															]
														},
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/LongAnswerDetailCommonSchema"
																},
																{
																	"type": "object",
																	"properties": {
																		"correctAnswer": {
																			"type": "string"
																		}
																	}
																}
															]
														}
													]
												}
											},
											"required": [
												"text",
												"points",
												"type",
												"detail"
											]
										}
									}
								},
								"required": [
									"title",
									"description",
									"minutesToAnswer",
									"language",
									"mode",
									"detail",
									"questions"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"testId": {
											"type": "string"
										}
									},
									"required": [
										"testId"
									]
								}
							}
						}
					}
				}
			}
		},
		"/tests/suggested": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": [
								"integer",
								"null"
							],
							"default": 5
						},
						"required": false,
						"name": "numberOfTests",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/TestFullSchema"
									}
								}
							}
						}
					}
				}
			}
		},
		"/tests/find-by-room": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string",
							"minLength": 1
						},
						"required": true,
						"name": "roomId",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"allOf": [
												{
													"$ref": "#/components/schemas/TestFullSchema"
												},
												{
													"allOf": [
														{
															"$ref": "#/components/schemas/TestCoreSchema"
														},
														{
															"type": [
																"object",
																"null"
															],
															"properties": {
																"_aggregate": {
																	"type": "object",
																	"properties": {
																		"numberOfQuestions": {
																			"type": "integer",
																			"minimum": 0
																		},
																		"totalPoints": {
																			"type": "number",
																			"minimum": 0
																		},
																		"totalCandidates": {
																			"type": "integer",
																			"minimum": 0
																		},
																		"totalAttempts": {
																			"type": "integer",
																			"minimum": 0
																		},
																		"averageScore": {
																			"type": "number",
																			"minimum": 0
																		},
																		"highestScore": {
																			"type": "number",
																			"minimum": 0
																		},
																		"lowestScore": {
																			"type": "number",
																			"minimum": 0
																		},
																		"averageTime": {
																			"type": "number",
																			"minimum": 0
																		}
																	},
																	"required": [
																		"numberOfQuestions",
																		"totalPoints",
																		"totalCandidates",
																		"totalAttempts",
																		"averageScore",
																		"highestScore",
																		"lowestScore",
																		"averageTime"
																	]
																},
																"_detail": {
																	"$ref": "#/components/schemas/TestDetailCommonSchema"
																}
															},
															"required": [
																"_aggregate",
																"_detail"
															]
														}
													]
												}
											]
										},
										"hasJoined": {
											"type": "boolean",
											"default": false
										}
									},
									"required": [
										"data"
									]
								}
							}
						}
					}
				}
			}
		},
		"/tests/{testId}": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"1",
								"0"
							],
							"default": "0"
						},
						"required": false,
						"name": "viewPassword",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TestFullSchema"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"minutesToAnswer": {
										"type": "number",
										"minimum": 1,
										"maximum": 10000
									},
									"language": {
										"type": "string"
									},
									"mode": {
										"type": "string",
										"enum": [
											"EXAM",
											"PRACTICE"
										]
									},
									"detail": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"mode": {
														"type": "string",
														"enum": [
															"EXAM"
														]
													},
													"roomId": {
														"type": "string"
													},
													"password": {
														"type": [
															"string",
															"null"
														]
													},
													"numberOfAttemptsAllowed": {
														"type": "integer",
														"minimum": 0,
														"default": 1
													},
													"numberOfParticipants": {
														"type": "integer",
														"minimum": 0,
														"default": 0
													},
													"isAnswerVisible": {
														"type": "boolean"
													},
													"isAllowedToSeeOtherResults": {
														"type": "boolean"
													},
													"openDate": {
														"type": [
															"string",
															"null"
														]
													},
													"closeDate": {
														"type": [
															"string",
															"null"
														]
													},
													"isPublic": {
														"type": "boolean",
														"default": false
													}
												},
												"required": [
													"mode",
													"roomId",
													"isAnswerVisible",
													"isAllowedToSeeOtherResults",
													"openDate",
													"closeDate"
												]
											},
											{
												"$ref": "#/components/schemas/PracticeDetailCommonSchema"
											}
										]
									},
									"questions": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"text": {
													"type": "string"
												},
												"points": {
													"type": "integer",
													"minimum": 0
												},
												"type": {
													"type": "string",
													"enum": [
														"MCQ",
														"LONG_ANSWER"
													]
												},
												"detail": {
													"oneOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/MCQDetailCommonSchema"
																},
																{
																	"type": "object",
																	"properties": {
																		"correctOption": {
																			"type": "integer",
																			"minimum": 0
																		}
																	}
																}
															]
														},
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/LongAnswerDetailCommonSchema"
																},
																{
																	"type": "object",
																	"properties": {
																		"correctAnswer": {
																			"type": "string"
																		}
																	}
																}
															]
														}
													]
												}
											},
											"required": [
												"text",
												"points",
												"type",
												"detail"
											]
										}
									}
								},
								"required": [
									"title",
									"description",
									"minutesToAnswer",
									"language",
									"mode",
									"detail",
									"questions"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/tests/{testId}/questions": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"1",
								"0"
							],
							"default": "0"
						},
						"required": false,
						"name": "viewCorrectAnswer",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/QuestionCoreSchema"
									}
								}
							}
						}
					}
				}
			}
		},
		"/tests/{testId}/attempts": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					},
					{
						"schema": {
							"type": "number",
							"minimum": 1,
							"default": 1
						},
						"required": false,
						"name": "page",
						"in": "query"
					},
					{
						"schema": {
							"type": [
								"number",
								"null"
							],
							"default": 100
						},
						"required": false,
						"name": "perPage",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "candidateId",
						"in": "query"
					},
					{
						"schema": {
							"anyOf": [
								{
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"IN_PROGRESS",
											"COMPLETED",
											"GRADED"
										]
									}
								},
								{
									"type": "string"
								}
							]
						},
						"required": false,
						"name": "statusFilters",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByPoints",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByCreatedAt",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortBySecondsSpent",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/AttemptCoreSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			}
		},
		"/tests/{testId}/participants": {
			"get": {
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					},
					{
						"schema": {
							"type": "number",
							"minimum": 1,
							"default": 1
						},
						"required": false,
						"name": "page",
						"in": "query"
					},
					{
						"schema": {
							"type": [
								"number",
								"null"
							],
							"default": 100
						},
						"required": false,
						"name": "perPage",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByRank",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/CandidateCoreSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			},
			"post": {
				"description": "Add a participant to an exam",
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"password": {
										"type": [
											"string",
											"null"
										]
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"description": "Remove a participant from an exam",
				"tags": [
					"Tests"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "testId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"participantId": {
										"type": "string"
									}
								},
								"required": [
									"participantId"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/attempts": {
			"get": {
				"tags": [
					"Attempts"
				],
				"parameters": [
					{
						"schema": {
							"type": "number",
							"minimum": 1,
							"default": 1
						},
						"required": false,
						"name": "page",
						"in": "query"
					},
					{
						"schema": {
							"type": [
								"number",
								"null"
							],
							"default": 100
						},
						"required": false,
						"name": "perPage",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "testId",
						"in": "query"
					},
					{
						"schema": {
							"type": "string"
						},
						"required": false,
						"name": "candidateId",
						"in": "query"
					},
					{
						"schema": {
							"anyOf": [
								{
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"IN_PROGRESS",
											"COMPLETED",
											"GRADED"
										]
									}
								},
								{
									"type": "string"
								}
							]
						},
						"required": false,
						"name": "statusFilters",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByPoints",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortByCreatedAt",
						"in": "query"
					},
					{
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						},
						"required": false,
						"name": "sortBySecondsSpent",
						"in": "query"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"page": {
											"type": "number"
										},
										"perPage": {
											"type": "number"
										},
										"total": {
											"type": "number"
										},
										"totalPages": {
											"type": "number"
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/AttemptCoreSchema"
											}
										}
									},
									"required": [
										"page",
										"perPage",
										"total",
										"totalPages",
										"data"
									]
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Attempts"
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"testId": {
										"type": "string"
									}
								},
								"required": [
									"testId"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"attemptId": {
											"type": "string"
										}
									},
									"required": [
										"attemptId"
									]
								}
							}
						}
					}
				}
			}
		},
		"/attempts/{attemptId}": {
			"get": {
				"tags": [
					"Attempts"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "attemptId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AttemptCoreSchema"
								}
							}
						}
					}
				}
			}
		},
		"/attempts/{attemptId}/answers": {
			"get": {
				"tags": [
					"Attempts"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "attemptId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AnswerCoreSchema"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Attempts"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "attemptId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"answers": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"questionId": {
													"type": "number"
												},
												"answer": {
													"allOf": [
														{
															"$ref": "#/components/schemas/AnswerForQuestionTypeSchema"
														},
														{
															"oneOf": [
																{
																	"type": "object",
																	"properties": {
																		"type": {
																			"type": "string",
																			"enum": [
																				"MCQ"
																			]
																		},
																		"chosenOption": {
																			"type": "number"
																		}
																	},
																	"required": [
																		"type",
																		"chosenOption"
																	]
																},
																{
																	"type": "object",
																	"properties": {
																		"type": {
																			"type": "string",
																			"enum": [
																				"LONG_ANSWER"
																			]
																		},
																		"answer": {
																			"type": "string"
																		}
																	},
																	"required": [
																		"type",
																		"answer"
																	]
																},
																{
																	"type": "null"
																}
															]
														}
													]
												}
											},
											"required": [
												"questionId"
											]
										}
									}
								},
								"required": [
									"answers"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/attempts/{attemptId}/submit": {
			"patch": {
				"tags": [
					"Attempts"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "attemptId",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/attempts/{attemptId}/score": {
			"patch": {
				"tags": [
					"Attempts"
				],
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"required": true,
						"name": "attemptId",
						"in": "path"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"evaluations": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"answerId": {
													"type": "string"
												},
												"points": {
													"type": "integer",
													"minimum": 0
												}
											},
											"required": [
												"answerId",
												"points"
											]
										}
									}
								},
								"required": [
									"evaluations"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		}
	},
	"webhooks": {}
}